@using System
@using System.Globalization
@using System.Linq
@using System.Net
@using System.Reflection
@using Microsoft.AspNetCore.Diagnostics
@{
    Layout = "Views._layout.cshtml";
}
@model IEnumerable<Microsoft.Extensions.StackTrace.Sources.ExceptionDetails>

<link rel="stylesheet" href="@ViewBag.DashboardMapPath/css.errorPage.css">

<div class="container-fluid">

    @foreach (var errorDetail in Model)
    {
        string location = string.Empty;
        <div class="titleerror">@errorDetail.Error.GetType().Name: @errorDetail.Error.Message</div>

        var firstFrame = errorDetail.StackFrames.FirstOrDefault();
        if (firstFrame != null)
        {
            location = firstFrame.Function;
        }
        if (!string.IsNullOrEmpty(location) && !string.IsNullOrEmpty(firstFrame?.File))
        {
            <p class="location">@location in <code title="@firstFrame.File">@System.IO.Path.GetFileName(firstFrame.File)</code>, line @firstFrame.Line</p>
        }
        else if (!string.IsNullOrEmpty(location))
        {
            <p class="location">@location</p>
        }

        if (errorDetail.Error is ReflectionTypeLoadException reflectionTypeLoadException)
        {
            if (reflectionTypeLoadException.LoaderExceptions.Length > 0)
            {
                <h3>Loader Exceptions:</h3>
                <ul>
                    @foreach (var ex in reflectionTypeLoadException.LoaderExceptions)
                    {
                        <li>@ex.Message</li>
                    }
                </ul>
            }
        }
    }
    <ul id="header">
        <li id="stack" tabindex="1" class="selected">Stack</li>
    </ul>

    <div id="stackpage" class="page">
        <ul>
            @{
                var exceptionCount = 0;
                var stackFrameCount = 0;
            }
            @foreach (var errorDetail in Model)
            {
                exceptionCount++;
                var exceptionDetailId = "exceptionDetail" + exceptionCount;

                <li>
                    <h2 class="stackerror">@errorDetail.Error.GetType().Name: @errorDetail.Error.Message</h2>
                    <ul>
                        @foreach (var frame in errorDetail.StackFrames)
                        {
                            stackFrameCount++;
                            var frameId = "frame" + stackFrameCount;

                            <li class="frame" id="@frameId">
                                @if (string.IsNullOrEmpty(frame.File))
                                {
                                    <h3>@frame.Function</h3>
                                }
                                else
                                {
                                    <h3>@frame.Function in <code title="@frame.File">@System.IO.Path.GetFileName(frame.File)</code></h3>
                                }

                                @if (frame.Line != 0 && frame.ContextCode.Any())
                                {
                                    <button class="expandCollapseButton" data-frameId="@frameId">+</button>
                                    <div class="source">
                                        @if (frame.PreContextCode.Any())
                                        {
                                            <ol start="@frame.PreContextLine" class="collapsible">
                                                @foreach (var line in frame.PreContextCode)
                                                {
                                                    <li><span>@line</span></li>
                                                }
                                            </ol>
                                        }

                                        <ol start="@frame.Line" class="highlight">
                                            @foreach (var line in frame.ContextCode)
                                            {
                                                <li><span>@line</span></li>
                                            }
                                        </ol>

                                        @if (frame.PostContextCode.Any())
                                        {
                                            <ol start='@(frame.Line + 1)' class="collapsible">
                                                @foreach (var line in frame.PostContextCode)
                                                {
                                                    <li><span>@line</span></li>
                                                }
                                            </ol>
                                        }
                                    </div>
                                }
                            </li>
                        }
                    </ul>
                </li>
                <li>
                    <br/>
                    <div class="rawExceptionBlock">
                        <div class="showRawExceptionContainer">
                            <button class="showRawException" data-exceptionDetailId="@exceptionDetailId">Show raw exception details</button>
                        </div>
                        <div id="@exceptionDetailId" class="rawExceptionDetails">
                            <pre class="rawExceptionStackTrace">@errorDetail.Error.ToString()</pre>
                        </div>
                    </div>
                </li>
            }
        </ul>
    </div>
</div>

<script src="@ViewBag.DashboardMapPath/js.errorPage.js"></script>
